name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build:
    name: Build Weather App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        id: cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm build
        env:
          VITE_SITE_URL: ${{ secrets.SITE_URL }}
          VITE_APPID: ${{ secrets.APPID }}

  Deploy:
    name: Deploy To Vercel
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Depolying to Vercel
        uses: amondnet/vercel-action@v25.1.0
        id: vercel-deployment
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          vercel-project-name: 'weather app'
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}
    outputs:
      preview-url: ${{ steps.vercel-deployment.outputs.preview-url }}

  E2E_Tests:
    name: E2E Testing
    timeout-minutes: 60
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: pnpm install
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: ${{ needs.deploy.outputs.preview-url }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
